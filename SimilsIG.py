#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Jan 15, 2019 12:50:17 PM WAT  platform: Windows NT

from tkinter import *

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True


def vp_start_gui(text1, score1, text2, score2, textarea):
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1(text1, score1, text2, score2,textarea, root)
    root.mainloop()
w = None


def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = Toplevel1(w)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, text1, score1, text2, score2, textarea, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        font11 = "-family {Segoe UI} -size 14 -weight normal -slant " \
                 "roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 14 -weight bold -slant roman" \
                " -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("569x393+481+142")
        top.title("New Toplevel")
        top.configure(background="#d5d8c7")

        self.TFrameback = ttk.Frame(top)
        self.TFrameback.place(relx=0.018, rely=0.025, relheight=0.929
                              , relwidth=0.958)
        self.TFrameback.configure(relief='sunken')
        self.TFrameback.configure(borderwidth="2")
        self.TFrameback.configure(relief='sunken')
        self.TFrameback.configure(width=545)

        self.TLabelsuggest = ttk.Label(self.TFrameback)
        self.TLabelsuggest.place(relx=0.514, rely=0.0, height=29, width=175)
        self.TLabelsuggest.configure(background="#F0F0F0")
        self.TLabelsuggest.configure(foreground="#000000")
        self.TLabelsuggest.configure(font=font9)
        self.TLabelsuggest.configure(relief='flat')
        self.TLabelsuggest.configure(text='''Degre de similarite:''')

        self.TLabeLPourcent1 = ttk.Label(self.TFrameback)
        self.TLabeLPourcent1.place(relx=0.862, rely=0.0, height=25, width=58)
        self.TLabeLPourcent1.configure(background="#F0F0F0")
        self.TLabeLPourcent1.configure(foreground="#ef1818")
        self.TLabeLPourcent1.configure(font=font11)
        self.TLabeLPourcent1.configure(relief='flat')
        self.TLabeLPourcent1.configure(text=score1)
        self.TLabeLPourcent1.configure(width=58)

        self.TFrame2 = ttk.Frame(self.TFrameback)
        self.TFrame2.place(relx=0.018, rely=0.11, relheight=0.342
                           , relwidth=0.963)
        self.TFrame2.configure(relief='groove')
        self.TFrame2.configure(borderwidth="2")
        self.TFrame2.configure(relief='groove')
        self.TFrame2.configure(width=525)

        self.TLabel3 = ttk.Label(self.TFrame2)
        self.TLabel3.place(relx=0.019, rely=0.08, height=109, width=416)
        self.TLabel3.configure(background="#F0F0F0")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="TkDefaultFont")
        self.TLabel3.configure(relief='flat')
        self.TLabel3.configure(wraplength="400")
        self.TLabel3.configure(text=text1)
        self.TLabel3.configure(width=416)

        self.cop2 = tk.Button(self.TFrame2, command=lambda: copie_suggested_mail(text1, textarea))

        self.cop2.place(relx=0.819, rely=0.24, height=54, width=87)
        self.cop2.configure(activebackground="#EFCD49")
        self.cop2.configure(activeforeground="#000000")
        self.cop2.configure(background="#EFCD49")
        self.cop2.configure(disabledforeground="#a3a3a3")
        self.cop2.configure(foreground="#000000")
        self.cop2.configure(highlightbackground="#EFCD49")
        self.cop2.configure(highlightcolor="black")
        self.cop2.configure(pady="0")
        self.cop2.configure(relief='groove')
        self.cop2.configure(text='''Copier''')
        self.cop2.configure(width=87)

        self.TFrame2_2 = ttk.Frame(self.TFrameback)
        self.TFrame2_2.place(relx=0.018, rely=0.603, relheight=0.37
                             , relwidth=0.963)
        self.TFrame2_2.configure(relief='groove')
        self.TFrame2_2.configure(borderwidth="2")
        self.TFrame2_2.configure(relief='groove')
        self.TFrame2_2.configure(width=525)

        self.TLabel3_3 = ttk.Label(self.TFrame2_2)
        self.TLabel3_3.place(relx=0.019, rely=0.074, height=109, width=416)
        self.TLabel3_3.configure(background="#F0F0F0")
        self.TLabel3_3.configure(foreground="#000000")
        self.TLabel3_3.configure(font="TkDefaultFont")
        self.TLabel3_3.configure(relief='flat')
        self.TLabel3_3.configure(wraplength="400")
        self.TLabel3_3.configure(text=text2)

        self.TlabelPourc2 = ttk.Label(self.TFrameback)
        self.TlabelPourc2.place(relx=0.862, rely=0.493, height=25, width=58)
        self.TlabelPourc2.configure(background="#F0F0F0")
        self.TlabelPourc2.configure(foreground="#ef1818")
        self.TlabelPourc2.configure(font=font11)
        self.TlabelPourc2.configure(relief='flat')
        self.TlabelPourc2.configure(text=score2)

        self.TLabelsuggest_6 = ttk.Label(self.TFrameback)
        self.TLabelsuggest_6.place(relx=0.514, rely=0.493, height=29, width=175)
        self.TLabelsuggest_6.configure(background="#F0F0F0")
        self.TLabelsuggest_6.configure(foreground="#000000")
        self.TLabelsuggest_6.configure(font=font9)
        self.TLabelsuggest_6.configure(relief='flat')
        self.TLabelsuggest_6.configure(text='''Degre de similarite:''')
        self.TLabelsuggest_6.configure(width=175)

        self.TLabelsuggest_7 = ttk.Label(self.TFrameback)
        self.TLabelsuggest_7.place(relx=0.018, rely=0.027, height=29, width=175)
        self.TLabelsuggest_7.configure(background="#F0F0F0")
        self.TLabelsuggest_7.configure(foreground="#556080")
        self.TLabelsuggest_7.configure(font=font9)
        self.TLabelsuggest_7.configure(relief='flat')
        self.TLabelsuggest_7.configure(text='''Suggestion 1:''')

        self.TLabelsuggest_8 = ttk.Label(self.TFrameback)
        self.TLabelsuggest_8.place(relx=0.018, rely=0.493, height=29, width=195)
        self.TLabelsuggest_8.configure(background="#F0F0F0")
        self.TLabelsuggest_8.configure(foreground="#556080")
        self.TLabelsuggest_8.configure(font=font9)
        self.TLabelsuggest_8.configure(relief='flat')
        self.TLabelsuggest_8.configure(text='''Suggestion 2:''')
        self.TLabelsuggest_8.configure(width=195)

        self.btncop2 = tk.Button(self.TFrameback, command=lambda: copie_suggested_mail(text2, textarea))
        self.btncop2.place(relx=0.807, rely=0.712, height=54, width=87)
        self.btncop2.configure(activebackground="#EFCD49")
        self.btncop2.configure(activeforeground="#000000")
        self.btncop2.configure(background="#EFCD49")
        self.btncop2.configure(disabledforeground="#a3a3a3")
        self.btncop2.configure(foreground="#000000")
        self.btncop2.configure(highlightbackground="#EFCD49")
        self.btncop2.configure(highlightcolor="black")
        self.btncop2.configure(pady="0")
        self.btncop2.configure(relief='groove')
        self.btncop2.configure(text='''Copier''')



def copie_suggested_mail(mail, textarea):

    textarea.insert(END, mail)

if __name__ == '__main__':
    vp_start_gui()
